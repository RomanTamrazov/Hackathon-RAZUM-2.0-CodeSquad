import telebot
import random
TOKEN = "8065173763:AAGh3SQyqxTslMB80V8o0TZH257K-0_H7BU"
bot = telebot.TeleBot(TOKEN)
tasks = {}
MOTIVATIONAL_QUOTES = [
    "–£—Å–ø–µ—Ö ‚Äî —ç—Ç–æ —Å—É–º–º–∞ –Ω–µ–±–æ–ª—å—à–∏—Ö —É—Å–∏–ª–∏–π, –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å!",
    "–ö–∞–∂–¥–∞—è –æ—à–∏–±–∫–∞ ‚Äî —ç—Ç–æ –µ—â–µ –æ–¥–∏–Ω —à–∞–≥ –∫ —É—Å–ø–µ—Ö—É!",
    "–ù–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–¥–∞–≤–∞–π—Å—è, –ø–æ—Ç–æ–º—É —á—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–æ—Ç –º–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ —Ç—ã –≥–æ—Ç–æ–≤ —Å–¥–∞—Ç—å—Å—è, —á–∞—Å—Ç–æ –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ—á–∫–æ–π –ø–µ—Ä–µ–ª–æ–º–∞!",
    "–¢–æ–ª—å–∫–æ —Ç–µ, –∫—Ç–æ —Ä–∏—Å–∫—É—é—Ç –∏–¥—Ç–∏ —Å–ª–∏—à–∫–æ–º –¥–∞–ª–µ–∫–æ, –º–æ–≥—É—Ç —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –¥–∞–ª–µ–∫–æ –æ–Ω–∏ –º–æ–≥—É—Ç –∑–∞–π—Ç–∏!",
    "–î–µ–ª–∞–π —Å–µ–≥–æ–¥–Ω—è —Ç–æ, —á—Ç–æ –¥—Ä—É–≥–∏–µ –Ω–µ —Ö–æ—Ç—è—Ç, –∑–∞–≤—Ç—Ä–∞ –±—É–¥–µ—à—å –∂–∏—Ç—å —Ç–∞–∫, –∫–∞–∫ –¥—Ä—É–≥–∏–µ –Ω–µ –º–æ–≥—É—Ç!"
]
#------------------------
@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.chat.id
    tasks[user_id] = tasks.get(user_id, [])
    bot.send_message(user_id, "–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π —à–∫–æ–ª—å–Ω—ã–π –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫.üìÖ\n–î–ª—è –ø–æ–º–æ—â–∏ —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ –Ω–∞–ø–∏—à–∏ - /help")
#------------------------
@bot.message_handler(commands=['motivate'])
def motivate(message):
    bot.send_message(message.chat.id, f"üí™ {random.choice(MOTIVATIONAL_QUOTES)}")
#------------------------
@bot.message_handler(commands=['add'])
def add_task(message):
    user_id = message.chat.id
    try:
        parts = message.text.split("/", maxsplit=3)
        if len(parts) < 4:
            raise ValueError("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤")
        category, task_text, time_str = parts[1].strip(), parts[2].strip(), parts[3].strip()
        tasks[user_id].append({"category": category, "text": task_text, "time": time_str, "done": False})
        bot.send_message(user_id, f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞–¥–∞—á–∞ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é {category} - {task_text} –≤ {time_str}")
    except:
        bot.send_message(user_id, "‚ö†Ô∏è –û—à–∏–±–∫–∞! –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥.")
#------------------------
@bot.message_handler(commands=['categories'])
def show_categories(message):
    user_id = message.chat.id
    if user_id not in tasks or not tasks[user_id]:
        bot.send_message(user_id, "üì≠ –£ —Ç–µ–±—è –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç –∑–∞–¥–∞—á.")
        return
    
    categories = set(task["category"] for task in tasks[user_id])
    bot.send_message(user_id, "üìÇ *–¢–≤–æ–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:*\n" + "\n".join(f"üîπ {c}" for c in categories), parse_mode="Markdown")
#-------------------------
@bot.message_handler(commands=['list'])
def list_tasks(message):
    user_id = message.chat.id
    args = message.text.split(maxsplit=1)
    category_filter = args[1].strip().lower() if len(args) > 1 else None

    if user_id not in tasks or not tasks[user_id]:
        bot.send_message(user_id, "üì≠ –£ —Ç–µ–±—è –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç –∑–∞–¥–∞—á.")
        return

    filtered_tasks = tasks[user_id]
    if category_filter:
        filtered_tasks = [t for t in filtered_tasks if t["category"].lower() == category_filter]

    if not filtered_tasks:
        bot.send_message(user_id, "üîç –í —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–¥–∞—á.")
        return

    task_list = "\n".join([
        f"{i+1}. [{t['category']}] {t['text']} –≤ {t['time']} {'‚úÖ' if t['done'] else '‚è≥'}"
        for i, t in enumerate(filtered_tasks)
    ])
    bot.send_message(user_id, f"üìã *–¢–≤–æ–∏ –∑–∞–¥–∞—á–∏:*\n{task_list}", parse_mode="Markdown")
#-------------------------
@bot.message_handler(commands=['done'])
def mark_done(message):
    user_id = message.chat.id
    try:
        task_num = int(message.text.split()[1]) - 1
        if 0 <= task_num < len(tasks.get(user_id, [])):
            tasks[user_id][task_num]["done"] = True
            bot.send_message(user_id, f"‚úÖ –ó–∞–¥–∞—á–∞ '{tasks[user_id][task_num]['text']}' –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!")
        else:
            bot.send_message(user_id, "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏.")
    except:
        bot.send_message(user_id, "‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π: /done [–Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏]")
#-------------------------
@bot.message_handler(commands=['delete'])
def delete_task(message):
    user_id = message.chat.id
    try:
        task_num = int(message.text.split()[1]) - 1
        if 0 <= task_num < len(tasks.get(user_id, [])):
            task_text = tasks[user_id].pop(task_num)["text"]
            bot.send_message(user_id, f"üóë –ó–∞–¥–∞—á–∞ '{task_text}' —É–¥–∞–ª–µ–Ω–∞.")
        else:
            bot.send_message(user_id, "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏.")
    except:
        bot.send_message(user_id, "‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π: /delete [–Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏]")
#------------------------
@bot.message_handler(commands=['calendar'])
def show_calendar(message):
    user_id = message.chat.id
    if user_id not in tasks or not tasks[user_id]:
        bot.send_message(user_id, "üì≠ –£ —Ç–µ–±—è –Ω–µ—Ç –∑–∞–¥–∞—á.")
        return
    
    tasks_sorted = sorted(tasks[user_id], key=lambda t: t["time"])
    calendar_view = "\n".join([
        f"{t['time']} - [{t['category']}] {t['text']} {'‚úÖ' if t['done'] else '‚è≥'}"
        for t in tasks_sorted
    ])
    
    bot.send_message(user_id, f"üìÖ *–¢–≤–æ–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å –∑–∞–¥–∞—á:*\n{calendar_view}", parse_mode="Markdown")
#--------------------------
@bot.message_handler(commands=['help'])
def help_command(message):
    bot.send_message(message.chat.id, """
üìå *–ö–æ–º–∞–Ω–¥—ã:*
/add –ö–∞—Ç–µ–≥–æ—Ä–∏—è / –ó–∞–¥–∞—á–∞ / –ß–ê–°:–ú–ò–ù–£–¢–´ - –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É
/list - –ø–æ–∫–∞–∑–∞—Ç—å –∑–∞–¥–∞—á–∏
/list [–∫–∞—Ç–µ–≥–æ—Ä–∏—è] - –ø–æ–∫–∞–∑–∞—Ç—å –∑–∞–¥–∞—á–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö
/categories - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
/done [–Ω–æ–º–µ—Ä] - –æ—Ç–º–µ—Ç–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π ‚úÖ
/delete [–Ω–æ–º–µ—Ä] - —É–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É ‚ùå
/calendar - –ø–æ–∫–∞–∑–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å üìÖ
/motivate - –º–æ—Ç–∏–≤–∞—Ü–∏—é –Ω–∞–¥–æ –ø–æ–¥–Ω—è—Ç—å
/help - –ø–æ–º–æ—â—å
""", parse_mode="Markdown")
print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ú–æ–∂–µ—Ç–µ –ø—Ä–æ–±–æ–≤–∞—Ç—å :)")
bot.polling(none_stop=True)